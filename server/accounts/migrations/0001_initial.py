# Generated by Django 5.2.5 on 2025-08-07 21:05

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='phone number')),
                ('user_type', models.CharField(choices=[('buyer', 'Buyer'), ('seller', 'Seller'), ('agent', 'Agent'), ('admin', 'Administrator')], default='buyer', max_length=10, verbose_name='user type')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='profile picture')),
                ('bio', models.TextField(blank=True, verbose_name='bio')),
                ('email_verified', models.BooleanField(default=False, verbose_name='email verified')),
                ('phone_verified', models.BooleanField(default=False, verbose_name='phone verified')),
                ('social_provider', models.CharField(blank=True, max_length=20, null=True, verbose_name='social provider')),
                ('social_uid', models.CharField(blank=True, max_length=200, null=True, verbose_name='social uid')),
                ('receive_newsletter', models.BooleanField(default=True, verbose_name='receive newsletter')),
                ('notification_preferences', models.JSONField(blank=True, default=dict, help_text='User preferences for notifications', verbose_name='notification preferences')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='EmailVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100, verbose_name='company name')),
                ('address', models.TextField(blank=True, verbose_name='address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='state/province')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='country')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='postal code')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('facebook', models.URLField(blank=True, verbose_name='facebook profile')),
                ('twitter', models.URLField(blank=True, verbose_name='twitter profile')),
                ('linkedin', models.URLField(blank=True, verbose_name='linkedin profile')),
                ('instagram', models.URLField(blank=True, verbose_name='instagram profile')),
                ('license_number', models.CharField(blank=True, max_length=50, verbose_name='real estate license number')),
                ('specialties', models.TextField(blank=True, verbose_name='specialties')),
                ('languages', models.JSONField(blank=True, default=list, help_text='List of languages spoken', verbose_name='languages spoken')),
                ('preferred_contact_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('whatsapp', 'WhatsApp'), ('sms', 'SMS')], default='email', max_length=20, verbose_name='preferred contact method')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user profile',
                'verbose_name_plural': 'user profiles',
            },
        ),
    ]
